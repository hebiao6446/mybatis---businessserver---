package com.business.action;

import java.sql.Time;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.springframework.beans.factory.annotation.Autowired;
import cn.eavic.framework.web.BaseAction;

import com.common.Commonparam;
import com.business.entity.Company;
import com.business.entity.User;

import com.business.service.CompanyManager;
import com.json.BaseBean;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;

@Namespace("/")
@Results({ @Result(name = BaseAction.NONE, location = "companyAction.action", type = "redirect") })
public class CompanyAction extends ActionSupport {
	/**
	 * 企业模块
	 */
	private static final long serialVersionUID = 7655056122242830524L;

	@Autowired
	CompanyManager companyManager;

	private String username, password;
	private Integer size, page;
	private Long companyId;
	private String name;
	private String introduce;
	private String address;
	private String email;
	private String logo;
	private String phone;
	private Time outWork;
	private Time reportWork;
	private Date updateTime;
	private Integer type;

	/**
	 * 企业列表
	 * 
	 * @throws Exception
	 */

	public void findCompanyList() throws Exception {
		HttpServletResponse response = (HttpServletResponse) ActionContext
				.getContext().get(ServletActionContext.HTTP_RESPONSE);
		HttpServletRequest request = (HttpServletRequest) ActionContext
				.getContext().get(ServletActionContext.HTTP_REQUEST);

		BaseBean bean = new BaseBean();

		try {
			HashMap<String, Object> param = new HashMap<String, Object>();
			param.put("size", size);
			param.put("startIndex", (page - 1) * size);
			List<Company> companyList = companyManager.findCompanyList(param);
			bean.setStatus(200);
			bean.setRows(companyList);
			bean.setTotal(companyManager.findCompanyListCount(param));
		} catch (Exception e) {
			bean.setStatus(400);
			bean.setMsg(e.getLocalizedMessage());
		}
		String json = JSONObject.fromObject(bean, Commonparam.getJsonConfig())
				.toString();
		response.getOutputStream().write(json.getBytes("UTF-8"));
	}

	/**
	 * 企业添加——修改
	 * 
	 * @throws Exception
	 */

	public void updateCompanyInfo() throws Exception {
		HttpServletResponse response = (HttpServletResponse) ActionContext
				.getContext().get(ServletActionContext.HTTP_RESPONSE);
		HttpServletRequest request = (HttpServletRequest) ActionContext
				.getContext().get(ServletActionContext.HTTP_REQUEST);

		BaseBean bean = new BaseBean();

		try {
			HashMap<String, Object> param = new HashMap<String, Object>();
			param.put("companyId", companyId);
			param.put("name", name);
			param.put("introduce", introduce);
			param.put("address", address);
			param.put("email", email);
			param.put("phone", phone);
			param.put("outWork", outWork);
			param.put("reportWork", reportWork);
			param.put("updateTime", new Date());
			companyManager.updateCompanyInfo(param);
			bean.setStatus(200);

		} catch (Exception e) {
			bean.setStatus(400);
			bean.setMsg(e.getLocalizedMessage());
			e.printStackTrace();
		}

		String json = JSONObject.fromObject(bean,
				Commonparam.getJsonConfig("yyyy-MM-dd HH:mm:ss")).toString();
		response.getOutputStream().write(json.getBytes("UTF-8"));
	}

	/**
	 * 企业信息查询
	 * 
	 * @throws Exception
	 */

	public void findCompanyInfo() throws Exception {
		HttpServletResponse response = (HttpServletResponse) ActionContext
				.getContext().get(ServletActionContext.HTTP_RESPONSE);
		HttpServletRequest request = (HttpServletRequest) ActionContext
				.getContext().get(ServletActionContext.HTTP_REQUEST);
		String page = "pages/companyManagerUpdate.jsp";
		try {
			Company com = null;
			if(companyId==null||companyId==0L){
				com=new Company();
				com.setOutWork(java.sql.Time.valueOf("18:00:00"));
				com.setReportWork(java.sql.Time.valueOf("09:00:00"));
			}else{
				com = companyManager.findCompanyInfo(companyId);
			}
			
			
			request.setAttribute("companyInfo", com);
		} catch (Exception e) {
			page = "common/500.jsp";
		}
		request.getRequestDispatcher(page).forward(request, response);
	}

	private String table, pk, fields;
	
	/**
	 * 关闭企业状态方法
	 * 
	 * @throws Exception
	 */
	public void deleteComapnyAllData() throws Exception {
		HttpServletResponse response = (HttpServletResponse) ActionContext
				.getContext().get(ServletActionContext.HTTP_RESPONSE);
		HttpServletRequest request = (HttpServletRequest) ActionContext
				.getContext().get(ServletActionContext.HTTP_REQUEST);

		BaseBean bean = new BaseBean();
		try {
			HashMap param = new HashMap();
			if (table.equals("company")) {
				param.put("table", "tb_company");
				param.put("pk", "company_id");
			}
			param.put("ids", fields.split(","));
			companyManager.deleteComapnyAllData(param);

			bean.setStatus(200);
		} catch (Exception ee0) {
			ee0.printStackTrace();
			bean.setStatus(400);
			bean.setMsg("删除失败!");
		}

		String json = JSONObject.fromObject(bean,
				Commonparam.getJsonConfig("yyyy-MM-dd HH:mm:ss")).toString();
		response.getOutputStream().write(json.getBytes("UTF-8"));
	}

	/**
	 * 开启企业状态方法
	 * 
	 * @throws Exception
	 */
	public void deleteComapnyQllData() throws Exception {
		HttpServletResponse response = (HttpServletResponse) ActionContext
				.getContext().get(ServletActionContext.HTTP_RESPONSE);
		HttpServletRequest request = (HttpServletRequest) ActionContext
				.getContext().get(ServletActionContext.HTTP_REQUEST);

		BaseBean bean = new BaseBean();
		try {
			HashMap param = new HashMap();
			if (table.equals("company")) {
				param.put("table", "tb_company");
				param.put("pk", "company_id");
			}
			param.put("ids", fields.split(","));
			companyManager.deleteComapnyQllData(param);

			bean.setStatus(200);
		} catch (Exception ee0) {
			bean.setStatus(400);
			bean.setMsg("删除失败!");
		}

		String json = JSONObject.fromObject(bean,
				Commonparam.getJsonConfig("yyyy-MM-dd HH:mm:ss")).toString();
		response.getOutputStream().write(json.getBytes("UTF-8"));
	}

	
	
	
	
	public CompanyManager getCompanyManager() {
		return companyManager;
	}

	public void setCompanyManager(CompanyManager companyManager) {
		this.companyManager = companyManager;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getIntroduce() {
		return introduce;
	}

	public void setIntroduce(String introduce) {
		this.introduce = introduce;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getTable() {
		return table;
	}

	public void setTable(String table) {
		this.table = table;
	}

	public String getPk() {
		return pk;
	}

	public void setPk(String pk) {
		this.pk = pk;
	}

	public String getFields() {
		return fields;
	}

	public void setFields(String fields) {
		this.fields = fields;
	}

	public String getLogo() {
		return logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	public String getPhone() {
		return phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	public Time getOutWork() {
		return outWork;
	}

	public void setOutWork(Time outWork) {
		this.outWork = outWork;
	}

	public Time getReportWork() {
		return reportWork;
	}

	public void setReportWork(Time reportWork) {
		this.reportWork = reportWork;
	}

	public Date getUpdateTime() {
		return updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	public Integer getType() {
		return type;
	}

	public void setType(Integer type) {
		this.type = type;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public Long getCompanyId() {
		return companyId;
	}

	public void setCompanyId(Long companyId) {
		this.companyId = companyId;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public Integer getSize() {
		return size;
	}

	public void setSize(Integer size) {
		this.size = size;
	}

	public Integer getPage() {
		return page;
	}

	public void setPage(Integer page) {
		this.page = page;
	}

}
