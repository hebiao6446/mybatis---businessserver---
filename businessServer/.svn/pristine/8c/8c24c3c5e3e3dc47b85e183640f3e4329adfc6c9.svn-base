package com.business.action;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;
import net.sf.json.JsonConfig;

//import org.apache.naming.java.javaURLContextFactory;
import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.springframework.beans.factory.annotation.Autowired;
import cn.eavic.framework.web.BaseAction;
import com.common.Commonparam;
import com.business.entity.Company;
import com.business.entity.User;

import com.business.service.UserManager;
import com.common.MD5Util;
import com.json.BaseBean;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;

@Namespace("/")
@Results({ @Result(name = BaseAction.NONE, location = "userAction.action", type = "redirect") })
public class UserAction extends ActionSupport {
	/**
	 *
	 */
	private static final long serialVersionUID = 7655056122242830524L;

	@Autowired
	UserManager userManager;

	private String username, password;
	private Integer size, page;
	private Long companyId;

	/**
	 * 登录
	 * 
	 * @throws Exception
	 */
	public void userLogin() throws Exception {
		HttpServletResponse response = (HttpServletResponse) ActionContext
				.getContext().get(ServletActionContext.HTTP_RESPONSE);
		HttpServletRequest request = (HttpServletRequest) ActionContext
				.getContext().get(ServletActionContext.HTTP_REQUEST);
		BaseBean bean = new BaseBean();
		try {
			
			HashMap<String, String> param = new HashMap<String, String>();
			
			param.put("username", username);
			param.put("password", Commonparam.Md5String(password));
			
				User user = userManager.userLogin(param);
				
				if(user==null){
					bean.setStatus(400);
					bean.setMsg("账号密码错误!");
				}
				else{
					
					Company company = userManager.findUserCompany(user.getRoleId());
					
					if(company!=null && company.getType()==1){
						Long count = userManager.findUserRoleChidren(user.getRoleId());
						if(count>0){
							user.setIsLeader(1);
						}
						else{
							user.setIsLeader(0);
						}	
					}else{
						user.setIsLeader(0);
					}
					
					request.getSession().setAttribute("user", user);
					request.getSession().setAttribute("company", company);
				
					bean.setStatus(200);
					
				}
				}catch (Exception e) {
					e.printStackTrace();
				}
				
		String json = JSONObject.fromObject(bean).toString();
		response.getOutputStream().write(json.getBytes("UTF-8"));		
		}

	public UserManager getUserManager() {
		return userManager;
	}

	public void setUserManager(UserManager userManager) {
		this.userManager = userManager;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public Long getCompanyId() {
		return companyId;
	}

	public void setCompanyId(Long companyId) {
		this.companyId = companyId;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public Integer getSize() {
		return size;
	}

	public void setSize(Integer size) {
		this.size = size;
	}

	public Integer getPage() {
		return page;
	}

	public void setPage(Integer page) {
		this.page = page;
	}

}
